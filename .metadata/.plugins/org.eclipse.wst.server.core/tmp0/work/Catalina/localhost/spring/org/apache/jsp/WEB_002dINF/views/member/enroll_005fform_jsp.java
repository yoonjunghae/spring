/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.86
 * Generated at: 2024-06-10 02:41:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class enroll_005fform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	 <!-- 이쪽에 메뉴바 포함 할꺼임 -->\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/menubar.jsp", out, false);
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"content\">\r\n");
      out.write("        <br><br>\r\n");
      out.write("        <div class=\"innerOuter\">\r\n");
      out.write("            <h2>회원가입</h2>\r\n");
      out.write("            <br>\r\n");
      out.write("\r\n");
      out.write("            <form id=\"enrollForm\" action=\"insertMember\" method=\"post\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"userId\">* ID :</label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"userId\" name=\"userId\" placeholder=\"Please Enter ID\" required>\r\n");
      out.write("                    <div id=\"checkResult\" style=\"display:none; font-size:0.8em\"></div>\r\n");
      out.write("                    <br>\r\n");
      out.write("                    \r\n");
      out.write("                    <label for=\"userPwd\">* Password :</label>\r\n");
      out.write("                    <input type=\"password\" class=\"form-control\" id=\"userPwd\" name=\"userPwd\" placeholder=\"Please Enter Password\" required><br>\r\n");
      out.write("                    \r\n");
      out.write("                    <label for=\"checkPwd\">* Password Check :</label>\r\n");
      out.write("                    <input type=\"password\" class=\"form-control\" id=\"checkPwd\" placeholder=\"Please Enter Password\" required><br>\r\n");
      out.write("                    \r\n");
      out.write("                    <label for=\"userName\">* Name :</label>\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" id=\"userName\" name=\"userName\" placeholder=\"Please Enter Name\" required><br>\r\n");
      out.write("                    \r\n");
      out.write("                    <label for=\"email\"> &nbsp; Email :</label>\r\n");
      out.write("                    <input type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Please Enter Email\"><br>\r\n");
      out.write("                    \r\n");
      out.write("                    <label for=\"age\"> &nbsp; Age :</label>\r\n");
      out.write("                    <input type=\"number\" class=\"form-control\" id=\"age\" name=\"age\" placeholder=\"Please Enter Age\"><br>\r\n");
      out.write("                    \r\n");
      out.write("                    <label for=\"phone\"> &nbsp; Phone :</label>\r\n");
      out.write("                    <input type=\"tel\" class=\"form-control\" id=\"phone\" name=\"phone\" placeholder=\"Please Enter Phone (-없이)\"><br>\r\n");
      out.write("                    \r\n");
      out.write("                    <label for=\"address\"> &nbsp; Address :</label>\r\n");
      out.write("                   ");
      out.write("\r\n");
      out.write("             		<div class=\"form-inline\">\r\n");
      out.write("					<label> &nbsp; 우편번호 : &nbsp;</label>\r\n");
      out.write("					<input type=\"text\"  name=\"post\" class=\"form-control mr-2 postcodify_postcode5\"  size=\"6\">\r\n");
      out.write("					<button type=\"button\" class=\"btn btn-primary\" id=\"postcodify_search_button\">검색</button>\r\n");
      out.write("					</div>\r\n");
      out.write("					<br>\r\n");
      out.write("					<label> &nbsp; 도로명주소 : </label>\r\n");
      out.write("					<input type=\"text\" name=\"address1\" class=\"form-control postcodify_address\" size=\"30\">\r\n");
      out.write("					<br>\r\n");
      out.write("				    <label> &nbsp; 상세주소 : </label>\r\n");
      out.write("					<input type=\"text\" name=\"address2\" class=\"form-control postcodify_extra_info\"  size=\"30\">\r\n");
      out.write("					<br>\r\n");
      out.write("				\r\n");
      out.write("				<!-- jQuery와 Postcodify를 로딩한다. -->\r\n");
      out.write("				<script src=\"//d1p7wdleee1q2z.cloudfront.net/post/search.min.js\"></script>\r\n");
      out.write("				<script>\r\n");
      out.write("					// 검색 단추를 누르면 팝업 레이어가 열리도록 설정한다.\r\n");
      out.write("					$(function(){\r\n");
      out.write("						$(\"#postcodify_search_button\").postcodifyPopUp();\r\n");
      out.write("					});\r\n");
      out.write("				</script>\r\n");
      out.write("                    <label for=\"\"> &nbsp; Gender : </label> &nbsp;&nbsp;\r\n");
      out.write("                    <input type=\"radio\" name=\"gender\" id=\"Male\" value=\"M\">\r\n");
      out.write("                    <label for=\"Male\">남자</label> &nbsp;&nbsp;\r\n");
      out.write("                    <input type=\"radio\" name=\"gender\" id=\"Female\" value=\"F\">\r\n");
      out.write("                    <label for=\"Female\">여자</label><br>\r\n");
      out.write("                    \r\n");
      out.write("                </div>\r\n");
      out.write("                <br>\r\n");
      out.write("                <div class=\"btns\" align=\"center\">\r\n");
      out.write("                    <button type=\"submit\" id=\"enrollBtn\" class=\"btn btn-primary\" >회원가입</button><!-- disabled  중복처리하고나서-->\r\n");
      out.write("                    <button type=\"reset\" class=\"btn btn-danger\"> 초기화</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("        <br><br>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("	// 아이디 중복체크 아직 안하는 경우 : 메세지 보여지지 않고 버튼 비활성화\r\n");
      out.write("	// 아이디 중복체크 후 사용불가능한 아이디일 경우 : 메세지로 \"중복아이디 존재 사용불가능\" 띄워주고 버튼 비활성화\r\n");
      out.write("	// 아이디 중복체크 후 사용가능한 아이디일 경우 : 메세지로 \"사용 가능한 아이디\" 띄워주고 버튼 활성화\r\n");
      out.write("  	// 중복체크 나중에 \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    	function idCheckValidate(num){ \r\n");
      out.write("    		\r\n");
      out.write("    		if(num == 0){ // 아직 중복체크를 하지 않는 경우 (아이디 적어도 5글자 이상은 되어야만 본격적으로 중복체크할 꺼임)\r\n");
      out.write("    			$(\"#checkResult\").hide();\r\n");
      out.write("    			$(\"#enrollBtn\").attr(\"disabled\", true);\r\n");
      out.write("    			\r\n");
      out.write("    		}else if(num == 1){ // 중복된 아이디가 존재할 경우 \r\n");
      out.write("    			$(\"#checkResult\").css(\"color\", \"red\").text(\"중복된 아이디가 존재합니다. 사용이 불가능합니다.\");\r\n");
      out.write("    			$(\"#checkResult\").show();\r\n");
      out.write("    			$(\"#enrollBtn\").attr(\"disabled\", true);\r\n");
      out.write("    			\r\n");
      out.write("    		}else if(num == 2){ // 중복된 아이디가 존재하지 않을 경우 ->사용 가능\r\n");
      out.write("    			$(\"#checkResult\").css(\"color\", \"green\").text(\"사용 가능한 아이디입니다. \");\r\n");
      out.write("    			$(\"#checkResult\").show();\r\n");
      out.write("    			$(\"#enrollBtn\").removeAttr(\"disabled\");\r\n");
      out.write("    			\r\n");
      out.write("    		}\r\n");
      out.write("    		\r\n");
      out.write("    	}\r\n");
      out.write("  \r\n");
      out.write("    	$(function(){\r\n");
      out.write("    		\r\n");
      out.write("    		var $idInput = $(\"#enrollForm input[name=userId]\"); // 아이디 입력하는 input 요소\r\n");
      out.write("    		\r\n");
      out.write("    		$idInput.keyup(function(){\r\n");
      out.write("    			\r\n");
      out.write("    			// 아이디는 최소 5글자 ~ \r\n");
      out.write("    			if($idInput.val().length >= 5){ // 5글자 이상되었을 때 본격적으로 중복체크\r\n");
      out.write("    				\r\n");
      out.write("   					$.ajax({\r\n");
      out.write("   						url:\"idCheck.do\",\r\n");
      out.write("   						data:{userId:$idInput.val()},\r\n");
      out.write("   						type:\"post\",\r\n");
      out.write("   						success:function(result){\r\n");
      out.write("   							if(result > 0){ //   중복된 아이디 존재\r\n");
      out.write("   								idCheckValidate(1);\r\n");
      out.write("   							}else{\r\n");
      out.write("   								idCheckValidate(2);\r\n");
      out.write("   							}\r\n");
      out.write("   						},error:function(){\r\n");
      out.write("   							console.log(\"아이디 중복체크용 ajax 통신 실패\");\r\n");
      out.write("   						}\r\n");
      out.write("   					});\r\n");
      out.write("   					\r\n");
      out.write("    			}else{\r\n");
      out.write("    				idCheckValidate(0);\r\n");
      out.write("    			}\r\n");
      out.write("    			\r\n");
      out.write("    		});\r\n");
      out.write("    	});\r\n");
      out.write("    \r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- 이쪽에 푸터바 포함할꺼임 -->\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
