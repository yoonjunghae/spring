<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<bean id="sqlsession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="config"></constructor-arg>
	</bean>

	<!-- myBatis의 설정 객체 생성 -->
	<bean id="config" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation"
			value="classpath:mybatis-config.xml"></property>
	</bean>

	<!-- dbcp의 싱글톤 객체 생성 -->
	<!-- db프로그램의 2단계까지 담당. driver설정, db연결 -->
	<bean id="realDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"
			value="com.mysql.cj.jdbc.Driver"></property>
		<property name="url"
			value="jdbc:mysql://localhost:3306/scott?"></property>
		<property name="username" value="root"></property>
		<property name="password" value="mysql"></property>
	</bean>
	 <bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="realDataSource"/>
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE"/>
				<property name="sqlPrefix" value="[SQL] "/>
			</bean>
		</property>
	</bean>
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- <tx:advice id ="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		<tx:method name="select*" read-only="true" rollback-for="Exception"/>
		<tx:method name="insert*" rollback-for="Exception"/>
	    <tx:method name="update1*" rollback-for="Exception"/> 
		<tx:method name="delete*" rollback-for="Exception"/>
<!-- 		<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>
 -->		</tx:attributes>
	</tx:advice>
   	<aop:config>
		<aop:pointcut expression="execution(* com.multi.spring..*ServiceImpl*.*(..))" id="serviceMethod"/>
		<aop:advisor id= "transactionAdvisor" pointcut-ref = "serviceMethod" advice-ref="txAdvice"/>
	</aop:config> -->
	 <tx:annotation-driven transaction-manager="transactionManager"/>
 
 
</beans>
